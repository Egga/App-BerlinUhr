#!/usr/bin/perl -w
# -*- perl -*-

#
# Author: Slaven Rezic
#
# Copyright (C) 2010 Slaven Rezic. All rights reserved.
# This program is free software; you can redistribute it and/or
# modify it under the same terms as Perl itself.
#
# Mail: slaven@rezic.de
# WWW:  http://www.rezic.de/eserte/
#

use strict;
use DateTime;
use Tk;

my $mw = tkinit;
my $c = $mw->Canvas(-width => 400, -height => 375)->pack(qw(-fill both -expand 1));

sub redraw {
    my $now = DateTime->now(time_zone => "local");
    my $hour_top = $now->hour / 5;
    my $hour_bottom = $now->hour % 5;
    my $min_top = $now->minute / 5;
    my $min_bottom = $now->minute % 5;
    my $sec = $now->second;

    my $box_w      = $c->width / 4;
    my $box_w_5min = $c->width / 11;
    my $box_h      = $c->height / 5;

    $c->delete("all");
    $c->createOval($box_w*2-$box_h/2,1, $box_w*2+$box_h/2,$box_h, -fill => $sec % 2 == 0 ? 'orange' : $c->cget(-bg));
    my $y = $box_h;
    for (1 .. 4)  { $c->createRectangle(($_-1)*$box_w, $y, $_*$box_w, $y+$box_h, -fill => ($_ <= $hour_top ? 'red' : undef)) }
    $y+=$box_h;
    for (1 .. 4)  { $c->createRectangle(($_-1)*$box_w, $y, $_*$box_w, $y+$box_h, -fill => ($_ <= $hour_bottom ? 'red' : undef)) }
    $y+=$box_h;
    for (1 .. 11) { $c->createRectangle(($_-1)*$box_w_5min, $y, $_*$box_w_5min, $y+$box_h, -fill => ($_ > $min_top ? undef : $_%3==0 ? 'red' : 'orange')) }
    $y+=$box_h;
    for (1 .. 4)  { $c->createRectangle(($_-1)*$box_w, $y, $_*$box_w, $y+$box_h, -fill => ($_ <= $min_bottom ? 'orange' : undef)) }
}

redraw();
$c->repeat(1000, \&redraw);

MainLoop;

__END__
